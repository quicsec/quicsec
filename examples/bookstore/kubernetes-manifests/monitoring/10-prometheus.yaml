apiVersion: "v1"
kind: "Namespace"
metadata:
  annotations: {}
  name: "monitoring"

---

apiVersion: "v1"
kind: "Service"
metadata:
  annotations: {}
  namespace: monitoring
  labels:
    app: prometheus
  name: prometheus-service
spec:
  ports:
  - name: "http-prometheus-service"
    port: 9090
    protocol: "TCP"
    targetPort: 9090
  selector:
    app: prometheus
  type: "ClusterIP"

--- 

apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  annotations: {}
  namespace: monitoring
  labels:
    app: "prometheus"
  name: "prometheus-deployment"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "prometheus"
  template:
    metadata:
      annotations: {}
      labels:
        app: "prometheus"
    spec:
      containers:
      - image: ghcr.io/quicsec/prometheus-2.39.1-kp
        imagePullPolicy: "IfNotPresent"
        name: "prometheus-deployment"
        ports:
        - containerPort: 9090
          protocol: "TCP"
      imagePullSecrets:
        - name: quicsec-pull-secret


---

apiVersion: "v1"
kind: "Service"
metadata:
  namespace: monitoring
  labels:
    app: grafana
  name: grafana-service
spec:
  ports:
  - name: "http-grafana-service"
    port: 3000
    protocol: "TCP"
    targetPort: 3000
  selector:
    app: grafana
  type: "ClusterIP"

--- 

apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  annotations: {}
  namespace: monitoring
  labels:
    app: grafana
  name: "grafana-deployment"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "grafana"
  template:
    metadata:
      annotations: {}
      labels:
        app: "grafana"
    spec:
      containers:
      - image: ghcr.io/quicsec/grafana:9.2.3-ubuntu
        imagePullPolicy: "IfNotPresent"
        name: "grafana-deployment"
        ports:
        - containerPort: 3000
          protocol: "TCP"
      imagePullSecrets:
        - name: quicsec-pull-secret
